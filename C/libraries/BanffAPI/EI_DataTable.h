#ifndef EI_DATATABLE_H
#define EI_DATATABLE_H

#include "EI_Common.h"

enum EIT_DATATABLELOOKUPTYPE {
    EIE_DATATABLELOOKUPTYPE_CREATE,
    EIE_DATATABLELOOKUPTYPE_FIND
};
typedef enum EIT_DATATABLELOOKUPTYPE EIT_DATATABLELOOKUPTYPE;

enum EIT_DATATABLELOOKUP_RETURNCODE {
    EIE_DATATABLELOOKUP_NOTFOUND,
    EIE_DATATABLELOOKUP_FOUND,
    EIE_DATATABLELOOKUP_FAIL
};
typedef enum EIT_DATATABLELOOKUP_RETURNCODE EIT_DATATABLELOOKUP_RETURNCODE;

struct EIT_DATA {
    char * Key;
    EIT_EXCLUSION ExcludedObs[2]; /* 2 periods */
    EIT_DATAREC * DataRec[2]; /* 2 periods */
    struct EIT_DATA * Next;
};
typedef struct EIT_DATA EIT_DATA;

struct EIT_DATATABLE {
    int Size;
    int NumberOfData;
    EIT_DATA ** Data; /* array of pointers to struct EIT_DATA */
};
typedef struct EIT_DATATABLE EIT_DATATABLE;

CLASS_DECLSPEC EIT_DATATABLE * EI_DataTableAllocate (int);
CLASS_DECLSPEC void EI_DataTableEmpty (EIT_DATATABLE *);
CLASS_DECLSPEC void EI_DataTableFree (EIT_DATATABLE *);
CLASS_DECLSPEC void EI_DataTableFreeItem (EIT_DATA *);
CLASS_DECLSPEC EIT_DATATABLELOOKUP_RETURNCODE EI_DataTableLookup (EIT_DATATABLE *,
    char *, EIT_DATATABLELOOKUPTYPE, EIT_DATA **);
CLASS_DECLSPEC void EI_DataTablePrint (EIT_DATATABLE *);
CLASS_DECLSPEC void EI_DataTablePrintStatistics (EIT_DATATABLE *);

#endif
